<?php
# This file was automatically generated by the MediaWiki 1.20alpha
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


/************************************************************************
 * @section   Include dependencies
 *
 * @{
 */

require_once( __DIR__ . '/PrivateSettings.php' );


/**@}*/

/************************************************************************
 * @section   MediaWiki core: Base settings
 *
 * @{
 */

## Database settings
$wgDBtype           = 'mysql';
$wgDBserver         = 'localhost';
$wgDBprefix         = '';
$wgDBTableOptions   = 'ENGINE=InnoDB, DEFAULT CHARSET=binary';

## General settings
$wgSitename = 'jQuery Wiki';
$wgMetaNamespace = 'Project';
$wgLanguageCode = 'en';
$wgDefaultSkin = 'jqdocs';

$wgScriptPath = '/mw';
$wgScriptExtension = '.php';

# To enable image uploads, make sure the 'images' directory is writable
$wgEnableUploads  = false;

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons  = false;

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;

// Static file cache at "/var/www/<domain>/mw-cache", sibling of public_html
$wgCacheDirectory = dirname( $IP ) . '/mw-cache';


## We installed MediaWiki from Git
## Extensions are seperate clones in a higher directory, fix paths:
$ExtPath = dirname( realpath( $IP ) ) . '/mediawiki-extensions';
$wgExtensionAssetsPath = '/mw-extensions';

## Debugging
if ( false ) {
	error_reporting( -1 );

	$wgShowExceptionDetails = true;
	$wgDebugToolbar = false;
}

/**@}*/

/************************************************************************
 * @section   MediaWiki extensions
 *
 *
 * @{
 */

require_once( "$ExtPath/ParserFunctions/ParserFunctions.php" );

require_once( "$ExtPath/DynamicPageList/DynamicPageList.php" );


/**@}*/

/************************************************************************
 * @section   MediaWiki additional settings
 *
 *
 * @{
 */

## Settings specifically for stage and production

if ( WebRequest::detectServer() === 'http://stage.docs.jquery.com' ) {

	// Stage settings:

	$wgDBname = 'jqdocs_stage';
	$wgServer = 'http://stage.docs.jquery.com';

} else {

	// Production settings:

	$wgDBname = 'jqdocs_docs';
	$wgServer = 'http://docs.jquery.com';
}


## Action paths, like "/edit/Page_name"
$actions = array(
	'view', 'edit', 'watch', 'unwatch', 'delete','revert', 'rollback',
	'protect', 'unprotect', 'markpatrolled', 'render', 'submit', 'history', 'purge'
);
foreach ( $actions as $action ) {
	$wgActionPaths[$action] = "/$action/$1";
}

# Override view, use "/Page_name" for regular page views.
$wgArticlePath = $wgActionPaths['view'] = "/$1";


## Global *.jquery.com favicon from static
$wgFavicon = 'http://static.jquery.com/favicon.ico';


## Allow raw HTML inside wiki markup through <html> tags
## Disabled by default, but enabled for jqdocs for backwards compatibility.
$wgRawHtml = true;
$wgWellFormedXml = false;

## JqDocs Skin
$wgExtensionFunctions[] = 'efSetupJqDocsSkin';
function efSetupJqDocsSkin() {
	global $wgResourceModules, $wgStylePath, $wgStyleDirectory;

	// This is loaded for all pages and doesn't depend on javacript
	// (loaded through <link>)
	$wgResourceModules['skins.jqdocs.static'] = array(
		'styles' => 'jqdocs/screen.css',

		'remoteBasePath' => $wgStylePath,
		'localBasePath' => $wgStyleDirectory,
	);

	// Dynamic scripts (and dependencies) are loaded
	// asynchronous through AJAX
	$wgResourceModules['skins.jqdocs.scripts'] = array(
		'scripts' => 'jqdocs/jqdocs.js',
		'dependencies' => array(
			'jquery.ui.tabs',
		),

		'remoteBasePath' => $wgStylePath,
		'localBasePath' => $wgStyleDirectory,
	);
}


## Set user permissions:

# Rename legacy group 'sysop' to 'wiki-admin'
$wgGroupPermissions['wiki-admin'] = $wgGroupPermissions['sysop'];

# Merge sysop, checkuser, developer and bureaucrat into wiki-admin
unset( $wgGroupPermissions['sysop'] );
unset( $wgGroupPermissions['checkuser'] );
unset( $wgGroupPermissions['developer'] );
unset( $wgGroupPermissions['bureaucrat'] );

$wgGroupPermissions['wiki-admin']['userrights']  = true;
$wgGroupPermissions['wiki-admin']['editinterface']  = true;

# Account creation: Disable for readers, users; Enable for wiki-admins
$wgGroupPermissions['*']['createaccount'] =
$wgGroupPermissions['user']['createaccount'] = false;

$wgGroupPermissions['wiki-admin']['createaccount'] = true;

# Editing: Disable for readers; Enable for users
$wgGroupPermissions['*']['edit'] =
$wgGroupPermissions['*']['writeapi'] =
$wgGroupPermissions['*']['createpage'] =
$wgGroupPermissions['*']['createtalk'] =
$wgGroupPermissions['*']['minoredit'] = false;

$wgGroupPermissions['user']['edit'] =
$wgGroupPermissions['user']['writeapi'] =
$wgGroupPermissions['user']['createtalk'] =
$wgGroupPermissions['user']['createpage'] =
$wgGroupPermissions['user']['minoredit'] = true;

# Uploads: Disable for users; Enable for wiki-admins
$wgGroupPermissions['user']['upload'] =
$wgGroupPermissions['user']['reupload'] =
$wgGroupPermissions['user']['reupload-shared'] = false;

$wgGroupPermissions['wiki-admin']['upload'] =
$wgGroupPermissions['wiki-admin']['reupload'] =
$wgGroupPermissions['wiki-admin']['reupload-shared'] = true;

# Enable delete-revision feature
$wgGroupPermissions['wiki-admin']['deleterevision']  = true;


## Hide old user preferences

# personal
$wgHiddenPrefs[] = 'skin';
$wgHiddenPrefs[] = 'realname';
$wgHiddenPrefs[] = 'nickname';
$wgHiddenPrefs[] = 'fancysig';
# rendering
$wgHiddenPrefs[] = 'imagesize';
$wgHiddenPrefs[] = 'underline';
$wgHiddenPrefs[] = 'highlightbroken';
$wgHiddenPrefs[] = 'showjumplinks';
$wgHiddenPrefs[] = 'numberheadings';
$wgHiddenPrefs[] = 'vector-noexperiments';
# editing
$wgHiddenPrefs[] = 'previewontop';
$wgHiddenPrefs[] = 'editsection';
$wgHiddenPrefs[] = 'editsectiononrightclick';
$wgHiddenPrefs[] = 'editondblclick';
$wgHiddenPrefs[] = 'showtoolbar';
$wgHiddenPrefs[] = 'minordefault';
$wgHiddenPrefs[] = 'externaleditor';
$wgHiddenPrefs[] = 'externaldiff';
# rc
$wgHiddenPrefs[] = 'usenewrc';
# searchoptions
$wgHiddenPrefs[] = 'vector-simplesearch';
# misc
$wgHiddenPrefs[] = 'diffonly';
$wgHiddenPrefs[] = 'norollbackdiff';


## Set default user preferences

# personal
$wgDefaultUserOptions['ccmeonemails'] = 1;
# searchoptions
$wgDefaultUserOptions['searchlimit'] = 25;
# watchlist
$wgDefaultUserOptions['watchlistdays'] = 0;

